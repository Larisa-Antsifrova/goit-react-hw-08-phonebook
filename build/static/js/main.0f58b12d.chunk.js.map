{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store.js","routes.js","components/Logo/Logo.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/Container/Container.js","components/Container/Container.module.css","components/Logo/Logo.module.css","components/AppBar/AppBar.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateFilter","items","createReducer","_","payload","state","filter","contact","id","logoutSuccess","loading","error","contactsReducer","combineReducers","initialUserState","name","email","user","registerSuccess","loginSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","getCurrentUserRequest","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","auth","persistReducer","devTools","process","persistor","persistStore","routes","home","register","login","Logo","className","styles","logo","getIsAuthenticated","getUserName","getUserEmail","Navigation","NavLinksList","exact","to","NavLink","activeClassName","defaultProps","connect","StyledChip","withStyles","root","color","Chip","UserMenu","userEmail","onLogout","avatar","Avatar","label","onClick","logoutbutton","mapDispatchToProps","logoutUser","userName","AuthNav","position","Container","AppBar","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","LoginPage","RegisterPage","ContactsPage","NotFoundPage","App","this","getCurrentUser","fallback","type","height","width","path","ReactDOM","StrictMode","document","getElementById","module","exports","axios","defaults","baseURL","authToken","headers","common","Authorization","registerUser","dispatch","a","registerRequest","post","response","data","message","loginUser","loginRequest","logoutRequest","getState","get","children","container"],"mappings":"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","file":"static/js/main.0f58b12d.chunk.js","sourcesContent":["// Imports from Redux Toolkit\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst updateFilter = createAction('phonebook/updateFilter');\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateFilter,\n};\n","// Imports from Redux\nimport { combineReducers } from 'redux';\n// Imports from Redux Toolkit\nimport { createReducer } from '@reduxjs/toolkit';\n// Imports of actions\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateFilter,\n} from './contacts-actions';\nimport { logoutSuccess } from '../auth/auth-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [logoutSuccess]: () => [],\n});\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  // registerRequest,\n  registerSuccess,\n  registerError,\n  // loginRequest,\n  loginSuccess,\n  loginError,\n  // logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [logoutSuccess]: () => false,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport const authReducer = combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  error,\n});\n","// Imports from Redux Toolkit\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// Imports from Redux Persist\nimport storage from 'redux-persist/lib/storage';\n// Redux Persist fix\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// Imports of reducers\nimport { contactsReducer } from './contacts/contacts-reducers';\nimport { authReducer } from './auth/auth-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n\nexport default routes;\n","import React from 'react';\n\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\n\nimport styles from './Logo.module.css';\n\nconst Logo = () => {\n  return <ImportContactsIcon className={styles.logo} />;\n};\n\nexport default Logo;\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getIsAuthenticated, getUserName, getUserEmail };\n","// Imports from React\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n// Imports of routes\nimport routes from '../../routes';\n// Imports of components\nimport Logo from '../Logo';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Navigation.module.css';\n\nconst Navigation = ({ isAuthenticated }) => {\n  return (\n    <nav>\n      <ul className={styles.NavLinksList}>\n        <li>\n          <NavLink exact to={routes.home} className={styles.NavLink}>\n            <Logo />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            exact\n            to={routes.home}\n            className={styles.NavLink}\n            activeClassName={styles['NavLink-active']}\n          >\n            Home\n          </NavLink>\n        </li>\n        {isAuthenticated && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className={styles.NavLink}\n              activeClassName={styles['NavLink-active']}\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nNavigation.defaultProps = {\n  isAuthenticated: false,\n};\n\nNavigation.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","// Imports from React\nimport React from 'react';\n// Imports of components\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport { getUserName, getUserEmail } from '../../redux/auth/auth-selectors';\nimport { logoutUser } from '../../redux/auth/auth-operations';\n// Imports of helpers\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n// Styles imports\nimport styles from './UserMenu.module.css';\n\n// Customization of default Chip component from Matarial-UI\nconst StyledChip = withStyles({\n  root: {\n    'background-color': '#283593',\n    color: '#ffffff',\n  },\n})(Chip);\n\nconst UserMenu = ({ userEmail, onLogout }) => {\n  return (\n    <div className={styles.UserMenu}>\n      <StyledChip avatar={<Avatar />} label={userEmail} />\n      <button onClick={onLogout} className={styles.logoutbutton}>\n        <ExitToAppIcon />\n      </button>\n    </div>\n  );\n};\n\nUserMenu.defaultProps = {\n  userEmail: null,\n};\n\nUserMenu.propTypes = {\n  userEmail: PropTypes.string,\n  onLogout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  userName: getUserName(state),\n  userEmail: getUserEmail(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: logoutUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","// Imports from React\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n// Imports of routes\nimport routes from '../../routes';\n// Styles imports\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => {\n  return (\n    <ul className={styles.NavLinksList}>\n      <li>\n        <NavLink\n          to={routes.register}\n          className={styles.NavLink}\n          activeClassName={styles['NavLink-active']}\n        >\n          Register\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to={routes.login}\n          className={styles.NavLink}\n          activeClassName={styles['NavLink-active']}\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default AuthNav;\n","import React from 'react';\nimport { AppBar as PhoneBookBar } from '@material-ui/core';\nimport Container from '../Container';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nimport styles from './AppBar.module.css';\n\nconst AppBar = ({ isAuthenticated }) => {\n  return (\n    <PhoneBookBar position=\"static\">\n      <Container>\n        <div className={styles.AppBar}>\n          <Navigation />\n          {isAuthenticated ? <UserMenu /> : <AuthNav />}\n        </div>\n      </Container>\n    </PhoneBookBar>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","// React imports\nimport React, { Component, Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components imports\nimport AppBar from './components/AppBar';\n\n// Helpers imports\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\n// Routes imports\nimport routes from './routes';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\n// Imports from Redux\nimport { connect } from 'react-redux';\n\n// Operations imports\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\n// Lazy imports for views\nconst HomePage = lazy(() =>\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./views/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./views/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst NotFoundPage = lazy(() =>\n  import('./views/NotFoundPage' /* webpackChunkName: \"contacts-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Suspense\n          fallback={\n            <Loader\n              type=\"TailSpin\"\n              color=\"#80cbc4\"\n              height={80}\n              width={80}\n              className=\"loader\"\n            />\n          }\n        >\n          <AppBar />\n          <Switch>\n            <Route exact path={routes.home} component={HomePage} />\n            <PublicRoute\n              path={routes.register}\n              component={RegisterPage}\n              restricted\n              redirectTo={routes.home}\n            />\n            <PublicRoute\n              path={routes.login}\n              component={LoginPage}\n              restricted\n              redirectTo={routes.contacts}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              component={ContactsPage}\n              redirectTo={routes.login}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","// Imports from React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Imports from Redux\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n// Imports from Redux Persist\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Imports of components\nimport App from './App';\n\n// Styles imports\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading=\"Loading...\" persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"Navigation_NavLinksList__qohYA\",\"NavLink\":\"Navigation_NavLink__37bjE\",\"NavLink-active\":\"Navigation_NavLink-active__3jNx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"AuthNav_NavLinksList__3DVYA\",\"NavLink\":\"AuthNav_NavLink__3sQgq\",\"NavLink-active\":\"AuthNav_NavLink-active__yWYL_\"};","// Imports of actions\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n// Imports of libraries\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst authToken = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registerUser = user => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', user);\n\n    authToken.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst loginUser = user => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', user);\n\n    authToken.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logoutUser = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n    authToken.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  if (!token) {\n    return;\n  }\n\n  authToken.set(token);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport { registerUser, loginUser, logoutUser, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu___NhWa\",\"logoutbutton\":\"UserMenu_logoutbutton__1aD_m\"};","// Imports from Redux Toolkit\nimport { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2hLIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__3U58Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__2gOq5\"};"],"sourceRoot":""}