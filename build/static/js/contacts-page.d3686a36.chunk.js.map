{"version":3,"sources":["components/Main/Main.js","components/Section/Section.js","components/Section/Section.module.css","components/PageTitle/PageTitle.module.css","components/PageTitle/PageTitle.js","components/Title/Title.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","views/NotFoundPage.js","components/Title/Title.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsPage.js"],"names":["Main","children","Section","className","styles","section","Container","module","exports","PageTitle","title","defaultProps","NotFoundPage","Title","getFilterValue","state","contacts","filter","getAllContacts","items","getFilteredItems","createSelector","name","number","toLowerCase","includes","toLocaleLowerCase","getLoading","loading","ContactForm","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","submitHandler","existingContact","find","contact","alert","trim","reset","form","onSubmit","this","type","onChange","required","btn","Component","connect","dispatch","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","addContact","Filter","filterValue","filterUpdate","autoComplete","updateFilter","target","ContactList","fetchContacts","filtered","onDeleteContact","isLoading","loaderConfig","color","height","width","loader","_","isEmpty","map","id","item","onClick","notification","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","ContactsPage"],"mappings":"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","file":"static/js/contacts-page.d3686a36.chunk.js","sourcesContent":["// Imports from React\nimport React from 'react';\n\n// Imports of helpers\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children }) => {\n  return <main>{children}</main>;\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Main;\n","// Imports from React\nimport React from 'react';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n\nimport Container from '../Container';\n// Styles imports\nimport styles from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return (\n    <section className={styles.section}>\n      <Container>{children}</Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Kps9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__ocxmT\"};","// Imports from React\nimport React from 'react';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './PageTitle.module.css';\n\nconst PageTitle = ({ title }) => {\n  return title && <h1 className={styles.title}>{title}</h1>;\n};\n\nPageTitle.defaultProps = {\n  title: '',\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__FxPGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2YLOT\",\"btn\":\"ContactForm_btn__1FwhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__drvrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3qAAT\",\"item\":\"ContactList_item__2S7vW\",\"btn\":\"ContactList_btn__2066d\",\"notification\":\"ContactList_notification__1QHrA\",\"loader\":\"ContactList_loader__2tHjQ\"};","// Imports from React\nimport React from 'react';\n// Imports of components\nimport Main from '../components/Main';\nimport Section from '../components/Section';\nimport PageTitle from '../components/PageTitle';\n\nconst NotFoundPage = () => {\n  return (\n    <Main>\n      <Section>\n        <PageTitle title=\"404 Page not Found\" />\n      </Section>\n    </Main>\n  );\n};\n\nexport default NotFoundPage;\n","// Imports from React\nimport React from 'react';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Title.module.css';\n\nconst Title = ({ title }) => {\n  return title && <h2 className={styles.title}>{title}</h2>;\n};\n\nTitle.defaultProps = {\n  title: '',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getFilterValue = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilteredItems = createSelector(\n  [getAllContacts, getFilterValue],\n  (items, filter) =>\n    items.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(filter.toLocaleLowerCase()) ||\n        number.includes(filter),\n    ),\n);\n\nconst getLoading = state => state.contacts.loading;\n\nexport { getFilterValue, getAllContacts, getFilteredItems, getLoading };\n","// Imports from React\nimport React, { Component } from 'react';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\n// Helpers imports\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  static propTypes = {\n    submitHandler: PropTypes.func.isRequired,\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { items, submitHandler } = this.props;\n\n    if (!name) {\n      return;\n    }\n\n    const existingContact = items.find(contact => contact.name === name);\n\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = { name: name.trim(), number: number.trim() };\n\n    submitHandler(newContact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.btn}>\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submitHandler: contact => dispatch(addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","// Imports of actions\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n// Imports of libraries\nimport axios from 'axios';\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","// Imports from React\nimport React from 'react';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filterValue, filterUpdate }) => {\n  return (\n    <div className={styles.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={filterUpdate}\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.defaultProps = {\n  filterValue: '',\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string,\n  filterUpdate: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filterValue: getFilterValue(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterUpdate: event => dispatch(updateFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","// Imports from React\nimport React, { Component } from 'react';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  getFilteredItems,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n// Imports of helpers\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Styles imports\nimport styles from './ContactList.module.css';\n\nclass ContactList extends Component {\n  static propTypes = {\n    filtered: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { filtered, onDeleteContact, isLoading } = this.props;\n    const loaderConfig = {\n      type: 'TailSpin',\n      color: '#80cbc4',\n      height: 50,\n      width: 50,\n      className: styles.loader,\n    };\n\n    return (\n      <>\n        {isLoading && <Loader {...loaderConfig} />}\n\n        {!_.isEmpty(filtered) && (\n          <ul className={styles.contacts}>\n            {filtered.map(({ id, name, number }) => (\n              <li key={id} className={styles.item}>\n                <div>\n                  <p>{name}:</p>\n                  <p>{number}</p>\n                </div>\n\n                <button\n                  className={styles.btn}\n                  onClick={() => {\n                    onDeleteContact(id);\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {_.isEmpty(filtered) && !isLoading && (\n          <p className={styles.notification}>No contact found.</p>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  filtered: getFilteredItems(state),\n  isLoading: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// Imports from React\nimport React from 'react';\n// Imports of components\nimport Main from '../components/Main';\nimport Section from '../components/Section';\nimport Title from '../components/Title';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <Main>\n      <Section>\n        <Title title=\"Add contacts\" />\n        <ContactForm />\n        <Title title=\"Find contacts\" />\n        <Filter />\n        <Title title=\"Contacts\" />\n        <ContactList />\n      </Section>\n    </Main>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}